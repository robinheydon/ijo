///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <string.h>
#include <math.h>

///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

#include <flecs.h>

///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

typedef struct Position
{
    float x;
    float y;
} Position;

typedef struct Velocity
{
    float dx;
    float dy;
} Velocity;

extern ECS_COMPONENT_DECLARE (Position);
extern ECS_COMPONENT_DECLARE (Velocity);

///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

extern ecs_world_t *world;

extern ecs_entity_t PhaseProcessInputs;
extern ecs_entity_t PhaseUpdate;
extern ecs_entity_t PhaseBeginDrawing;
extern ecs_entity_t PhaseBegin3D;
extern ecs_entity_t PhaseDraw3D;
extern ecs_entity_t PhaseEnd3D;
extern ecs_entity_t PhaseBegin2D;
extern ecs_entity_t PhaseDraw2D;
extern ecs_entity_t PhaseDrawDebug;
extern ecs_entity_t PhaseEnd2D;
extern ecs_entity_t PhaseEndDrawing;

void move_system (ecs_iter_t *it);

///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

typedef struct DebugFPS
{
    bool flag;
} DebugFPS;

extern ECS_COMPONENT_DECLARE (DebugFPS);

void init_fps_counter (void);
void toggle_fps_counter (void);

///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

#include <raylib.h>

///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

extern void *atkinson_regular;
extern uint64_t atkinson_regular_len;

extern Font main_font;

///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
